AWSTemplateFormatVersion: 2010-09-09
Description: IAM Policies for Kinesis DeliveryStream

Parameters:
  Region:
    Type: String
    Default: us-east-1
  ProductGroupName:
    Type: String
    Default: ktest
  S3BucketOutput:
    Type: String
    Default: firehose-deliverystream-test
  S3CodeBucket:
    Type: String
    Default: firehose-deliverystream-test
  S3CodeObjectKey:
    Type: String
    Default: code/kinesis-data-analytics-app-1.0.jar
  RoleName:
    Type: String
    Default: ktest-kinesis-analytics-role

Resources:

  KinesisAnalyticsApplicationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${ProductGroupName}"
      RetentionInDays: 7

  InputKinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Sub "${ProductGroupName}-analyticsstarterkit-sourcestream"
      ShardCount: 2
  #      RetentionPeriodHours: 24
  #      StreamEncryption:
  #        EncryptionType: KMS
  #        KeyId: !Ref myKey
  #      Tags:
  #        - Key: Environment
  #          Value: DEV

  KinesisAnalyticsApplication:
    Type: AWS::KinesisAnalyticsV2::Application
    DependsOn:
#      - KinesisAnalyticsApplicationLogStream
#      - KinesisAnalyticsApplicationRole
      - InputKinesisStream
    Properties:
      ApplicationName: !Sub "${ProductGroupName}-analyticsstarterkit"
      ApplicationMode: STREAMING
      ServiceExecutionRole: !Join ['', ['arn:aws:iam::', !Ref AWS::AccountId, ':role/', !Ref RoleName]]
      RuntimeEnvironment: FLINK-1_13
      ApplicationConfiguration:
        EnvironmentProperties:
          PropertyGroups:
            - PropertyGroupId: FlinkAppProperties
              PropertyMap:
                "region": "us-east-1"
                "bucket_check_interval_in_seconds": "2"
                "inactivity_interval_in_seconds": "2"
                "rolling_interval_in_seconds": "2"
                "s3_output_path": !Sub "s3a://${S3BucketOutput}/kda_flink_starter_kit_output/"
                "session_time_out_in_minutes": "10"
                "input_stream_name": !Sub "${ProductGroupName}-analyticsstarterkit-sourcestream"
                "stream_init_position": "TRIM_HORIZON"
        ApplicationCodeConfiguration:
          CodeContent:
            S3ContentLocation:
#              BucketARN: arn:aws:s3:::firehose-deliverystream-test
#              FileKey: "code/kinesis-data-analytics-app-1.0.jar"
              BucketARN: !Join ['', ['arn:aws:s3:::', !Ref S3CodeBucket]]
              FileKey: !Ref S3CodeObjectKey
          CodeContentType: ZIPFILE
        FlinkApplicationConfiguration:
          MonitoringConfiguration:
#            LogLevel: INFO
#            ConfigurationType: CUSTOM
            ConfigurationType: DEFAULT
#          CheckpointConfiguration:
#            CheckpointingEnabled: Boolean
#            CheckpointInterval: Integer
#            ConfigurationType: String
#            MinPauseBetweenCheckpoints: Integer
          ParallelismConfiguration:
            ConfigurationType: "CUSTOM"
            Parallelism: 5
            ParallelismPerKPU: 1
            AutoScalingEnabled: false

  KinesisAnalyticsApplicationLogStream:
    Type: AWS::Logs::LogStream
    DependsOn:
      - KinesisAnalyticsApplicationLogGroup
    Properties:
      LogGroupName: !Ref KinesisAnalyticsApplicationLogGroup
#      LogStreamName: "kda_flink_starter_kit"
      LogStreamName: !Ref KinesisAnalyticsApplication

  KinesisAnalyticsApplicationCloudwatch:
    Type: AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption
    DependsOn:
      - KinesisAnalyticsApplication
      - KinesisAnalyticsApplicationLogStream
    Properties:
      ApplicationName: !Ref KinesisAnalyticsApplication
      CloudWatchLoggingOption:
        #        LogStreamARN: !GetAtt KinesisAnalyticsApplicationLogStream.Arn
        LogStreamARN: !Join [ ':', [ 'arn:aws:logs', !Ref Region, !Ref AWS::AccountId, log-group, !Ref KinesisAnalyticsApplicationLogGroup, 'log-stream', !Ref KinesisAnalyticsApplicationLogStream ] ]

  #  KinesisAnalyticsApplicationOutput:
#    Type: AWS::KinesisAnalyticsV2::ApplicationOutput
#    DependsOn:
#      - KinesisAnalyticsApplication
#    Properties:
#      ApplicationName: !Ref KinesisAnalyticsApplication
#      Output:
#        DestinationSchema:
#          RecordFormatType: JSON
#        KinesisFirehoseOutput:
#          ResourceARN: String
#        KinesisStreamsOutput:
#          ResourceARN: String
#        LambdaOutput:
#          ResourceARN: String
#        Name: String

#  ApplicationReferenceDataSource:
#    Type:  'AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource'
#    Properties:
#      ApplicationName: !Ref KinesisAnalyticsApplication
#      ReferenceDataSource:
#        TableName: exampleTable
#        ReferenceSchema:
#          RecordColumns:
#            - Name: example
#              SqlType: VARCHAR(16)
#              Mapping: $.example
#              RecordFormat:
#                RecordFormatType: JSON
#                MappingParameters:
#                  JSONMappingParameters:
#                    RecordRowPath:$
#        S3ReferenceDataSource:
#          BucketARN: !Join ['', ['arn:aws:s3:::', !Ref S3BucketOutput]]
#          FileKey: fakeKey

