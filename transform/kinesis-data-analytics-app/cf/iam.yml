AWSTemplateFormatVersion: 2010-09-09
Description: IAM Policies for Kinesis DeliveryStream

Parameters:
  ProductGroupName:
    Type: String
    Default: ktest
  S3BucketOutput:
    Type: String
    Default: firehose-deliverystream-test
  S3CodeBucket:
    Type: String
    Default: firehose-deliverystream-test
  S3CodeObjectKey:
    Type: String
    Default: code/kinesis-data-analytics-app-1.0.jar

Resources:

  KinesisAnalyticsApplicationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProductGroupName}-kinesis-analytics-role"
      Description: ""
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: kinesisanalytics.amazonaws.com
            Action: 'sts:AssumeRole'
  KinesisAnalyticsApplicationPolicy:
    Type: AWS::IAM::Policy
    DependsOn:
      - KinesisAnalyticsApplicationRole
    Properties:
      PolicyName: !Sub "${ProductGroupName}-kinesis-analytics-policy"
      Roles:
        - !Ref KinesisAnalyticsApplicationRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          #           Cloudwatch Logging
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "*"
          #           Cloudwatch
          - Effect: Allow
            Action:
              - "autoscaling:Describe*"
              - "cloudwatch:*"
              - "logs:*"
              - "sns:*"
              - "iam:GetPolicy"
              - "iam:GetPolicyVersion"
              - "iam:GetRole"
            Resource: "*"
          #           Cloudwatch
          - Effect: Allow
            Action: "iam:CreateServiceLinkedRole"
            Resource: "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*"
            Condition:
              StringLike:
                "iam:AWSServiceName": "events.amazonaws.com"
          #           Kinesis
          - Effect: Allow
            Action: "kinesis:*"
            Resource: "*"
          #           S3
          - Effect: Allow
            Action:
              #                - "s3:AbortMultipartUpload"
              - "s3:GetBucketLocation"
              - "s3:GetObject"
              - "s3:ListBucket"
              - "s3:ListBucketMultipartUploads"
            #                - "s3:PutObject"
            Resource:
              - !Join [ '', [ 'arn:aws:s3:::', !Ref S3CodeBucket, '/code' ] ]
              - !Join [ '', [ 'arn:aws:s3:::', !Ref S3CodeBucket, '/code/*' ] ]
          - Effect: Allow
            Action:
              - "s3:AbortMultipartUpload"
              - "s3:GetBucketLocation"
              - "s3:GetObject"
              - "s3:ListBucket"
              - "s3:ListBucketMultipartUploads"
              - "s3:PutObject"
            Resource:
              - !Join [ '', [ 'arn:aws:s3:::', !Ref S3BucketOutput ] ]
              - !Join [ '', [ 'arn:aws:s3:::', !Ref S3BucketOutput, '/*' ] ]