AWSTemplateFormatVersion: 2010-09-09
Description: IAM Policies for Kinesis DeliveryStream

Parameters:
  ProductGroupName:
    Type: String
    Default: ktest
  S3BucketOutput:
    Type: String
    Default: firehose-deliverystream-test
  S3CodeBucket:
    Type: String
    Default: firehose-deliverystream-test
  S3CodeObjectKey:
    Type: String
    Default: code/kinesis-data-analytics-app-1.0.jar

Resources:

  KinesisAnalyticsApplicationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProductGroupName}-kinesis-analytics-role"
      Description: ""
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: kinesisanalytics.amazonaws.com
            Action: 'sts:AssumeRole'


  KinesisAnalyticsApplicationPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${ProductGroupName}-kinesis-analytics-policy"
      Roles:
        - !Ref KinesisAnalyticsApplicationRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
#           Cloudwatch Logging
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "*"
#           Cloudwatch
          - Effect: Allow
            Action:
              - "autoscaling:Describe*"
              - "cloudwatch:*"
              - "logs:*"
              - "sns:*"
              - "iam:GetPolicy"
              - "iam:GetPolicyVersion"
              - "iam:GetRole"
            Resource: "*"
#           Cloudwatch
          - Effect: Allow
            Action: "iam:CreateServiceLinkedRole"
            Resource: "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*"
            Condition:
              StringLike:
                "iam:AWSServiceName": "events.amazonaws.com"
#           Kinesis
          - Effect: Allow
            Action: "kinesis:*"
            Resource: "*"
#           S3
          - Effect: Allow
            Action: "s3:*"
            Resource: "*"

  KinesisAnalyticsApplicationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/aws/kinesis-analytics/kda_flink_starter_kit"
      RetentionInDays: 7

  KinesisAnalyticsApplicationLogStream:
    Type: AWS::Logs::LogStream
    DependsOn: KinesisAnalyticsApplicationLogGroup
    Properties:
      LogGroupName: "/aws/kinesis-analytics/kda_flink_starter_kit"
      LogStreamName: "kda_flink_starter_kit"

  InputKinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Sub "${ProductGroupName}-analyticsstarterkit-sourcestream"
      ShardCount: 2
  #      RetentionPeriodHours: 24
  #      StreamEncryption:
  #        EncryptionType: KMS
  #        KeyId: !Ref myKey
  #      Tags:
  #        - Key: Environment
  #          Value: DEV

  KinesisAnalyticsApplication:
    Type: AWS::KinesisAnalyticsV2::Application
    DependsOn:
      - KinesisAnalyticsApplicationLogStream
      - KinesisAnalyticsApplicationRole
    Properties:
#      ApplicationName: !Sub "{ProductGroupName}-analyticsstarterkit-application"
      ApplicationMode: STREAMING
      ServiceExecutionRole: !GetAtt KinesisAnalyticsApplicationRole.Arn
      RuntimeEnvironment: FLINK-1_13
      ApplicationConfiguration:
        EnvironmentProperties:
          PropertyGroups:
            - PropertyGroupId: FlinkAppProperties
              PropertyMap:
                "region": "us-east-1"
                "bucket_check_interval_in_seconds": "2"
                "inactivity_interval_in_seconds": "2"
                "rolling_interval_in_seconds": "2"
                "s3_output_path": !Sub "s3a://${S3BucketOutput}/kda_flink_starter_kit_output"
                "session_time_out_in_minutes": "10"
                "input_stream_name": "kda_flink_starter_kit_kinesis_stream"
                "stream_init_position": "TRIM_HORIZON"
        ApplicationCodeConfiguration:
          CodeContent:
            S3ContentLocation:
              BucketARN: !Join ['', ['arn:aws:s3:::', !Ref S3CodeBucket]]
              FileKey: !Ref S3CodeObjectKey
          CodeContentType: ZIPFILE
        FlinkApplicationConfiguration:
          ParallelismConfiguration:
            ConfigurationType: "CUSTOM"
            Parallelism: 5
            ParallelismPerKPU: 1
            AutoScalingEnabled: false

#  KinesisAnalyticsApplicationOutput:
#    Type: AWS::KinesisAnalyticsV2::ApplicationOutput
#    Properties:
#      ApplicationName: !Sub "{ProductGroupName}-analyticsstarterkit-application"
#      Output:


#  aws kinesisanalyticsv2 create-application \
#  --cli-input-json file://flink_starter_kit_def_stream_position_trim_horizon.json

#  OutputKinesisStream:
#    Type: AWS::Kinesis::Stream
#    Properties:
#      ShardCount: 1
#  ApplicationReferenceDataSource:
#    Type: AWS::KinesisAnalytics::ApplicationReferenceDataSource
#    DependsOn: BasicApplicationOutputs
#    Properties:
#      ApplicationName: !Ref BasicApplication
#      ReferenceDataSource:
#        TableName: "exampleTable"
#        ReferenceSchema:
#          RecordColumns:
#            - Name: "example"
#              SqlType: "VARCHAR(16)"
#              Mapping: "$.example"
#          RecordFormat:
#            RecordFormatType: "JSON"
#            MappingParameters:
#              JSONMappingParameters:
#                RecordRowPath: "$"
#        S3ReferenceDataSource:
#          BucketARN: !GetAtt S3Bucket.Arn
#          FileKey: 'fakeKey'
#          ReferenceRoleARN: !GetAtt KinesisAnalyticsRole.Arn
#  S3Bucket:
#    Type: AWS::S3::Bucket
